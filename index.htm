<!DOCTYPE html>
<html lang="fr">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0"> <title>Dialogue interactif</title>
<style>
  body {
    font-family: 'Courier New', monospace;
    background-color: #f8f8f8;
    color: #333;
    max-width: 90%; /* Prend 90% de la largeur de l'écran */
    width: 600px; /* Largeur maximale pour les écrans plus grands */
    margin: 0 auto; /* Centre le contenu */
    padding: 20px 10px; /* Réduit le padding pour les mobiles */
    line-height: 1.6;
    font-size: 1.1em; /* Légèrement plus grand pour la lisibilité sur mobile */
    box-sizing: border-box; /* S'assure que le padding est inclus dans la largeur */
  }
  #typing-text {
    white-space: pre-wrap;
    overflow: hidden;
    border-right: 2px solid #333;
    min-height: 200px; /* Hauteur minimale ajustée pour mobile */
    padding-right: 5px; /* Pour éviter que le curseur ne colle au texte */
    box-sizing: border-box;
    word-wrap: break-word; /* Important pour les longs mots sur petits écrans */
  }
  .paranoia {
    display: inline-block;
    font-weight: normal;
    color: inherit;
    transition: all 2s ease-out;
  }
  .paranoia.final {
    font-size: 1.3em; /* Ajusté pour mobile */
    color: #ff0000;
    font-weight: bold;
  }
  #continue-link {
    opacity: 0;
    display: block; /* Passe en block pour prendre toute la largeur disponible sur mobile */
    width: fit-content; /* S'adapte au contenu */
    margin: 20px auto 0; /* Centre le bouton */
    padding: 12px 25px; /* Augmente légèrement le padding pour faciliter le toucher */
    background-color: #333;
    color: white;
    text-decoration: none;
    border-radius: 4px;
    transition: opacity 1s ease-in;
    text-align: center; /* Centrage du texte si le bouton est plus large */
    font-size: 1.1em; /* Taille de police du bouton */
  }
  #continue-link.visible {
    opacity: 1;
  }
  .cursor {
    animation: blink 1s step-end infinite;
  }
  @keyframes blink {
    from, to { opacity: 1; }
    50% { opacity: 0; }
  }

  /* Media Queries pour des ajustements spécifiques aux écrans plus petits */
  @media (max-width: 480px) {
    body {
      font-size: 1em; /* Taille de base légèrement plus petite pour les très petits écrans */
      padding: 15px 10px;
    }
    #typing-text {
      min-height: 150px; /* Encore plus petit sur les très petits écrans */
    }
    .paranoia.final {
      font-size: 1.2em; /* Réajuste la taille du mot final */
    }
    #continue-link {
      padding: 10px 20px;
      font-size: 1em;
    }
  }
</style>
</head>
<body>

<div id="typing-text"></div>
<a href="https://shogunfever.github.io/Madame/szymbo" id="continue-link">Lancer les épreuves</a>

<script>
const textLines = [
  {text: "Madame,", delayAfter: 100},
  {text: "\n\nSoudainement, un doute m'a pris.", delayAfter: 10},
  {text: "\nUne angoisse paranoïaque.", delayAfter: 10},
  {text: "\nEt si vous étiez un robot?", delayAfter: 10},
  {text: "\nEt si depuis le début j'écrivais à un robot", delayAfter: 20},
  {text: "\nEt non à vous?", delayAfter: 2000}, // Pause plus longue ici
  {text: "\nMais ne vous en faites pas", delayAfter: 1000},
  {text: "\nJ'ai trouvé une solution...", delayAfter: 1200},
  {text: "\n\nVous êtes prête?", delayAfter: 1000}
];

const typingElement = document.getElementById('typing-text');
const continueLink = document.getElementById('continue-link');
let lineIndex = 0;
let charIndex = 0;
let isParanoiaWord = false;
let paranoiaWordIndex = 0;
const targetWord = "paranoïaque.";

function typeWriter() {
  if (lineIndex < textLines.length) {
    const currentLine = textLines[lineIndex];
    
    // Pour ne pas ajouter de <span> si on est au début d'une nouvelle ligne
    let charToAdd = currentLine.text[charIndex];
    
    // Vérifie si nous commençons à taper le mot "paranoïaque"
    if (!isParanoiaWord && charToAdd === targetWord[0] && currentLine.text.substring(charIndex, charIndex + targetWord.length) === targetWord) {
        isParanoiaWord = true;
        paranoiaWordIndex = 0; // Réinitialise pour le nouveau mot
        typingElement.innerHTML += '<span class="paranoia">';
    }

    if (isParanoiaWord && charToAdd === targetWord[paranoiaWordIndex]) {
        typingElement.querySelector('.paranoia:last-child').textContent += charToAdd;
        paranoiaWordIndex++;
        if (paranoiaWordIndex === targetWord.length) {
            isParanoiaWord = false;
            // Applique la classe 'final' après un court délai pour l'animation
            setTimeout(() => {
                const paranoiaSpans = typingElement.querySelectorAll('.paranoia');
                if (paranoiaSpans.length > 0) {
                    paranoiaSpans[paranoiaSpans.length - 1].classList.add('final');
                }
            }, 500);
        }
    } else {
        typingElement.textContent += charToAdd;
    }
    
    charIndex++;
    setTimeout(typeWriter, Math.random() * 50 + 30); // Vitesse de frappe variable
  } else {
    // Fin du texte - affiche le curseur clignotant
    typingElement.innerHTML += '<span class="cursor">|</span>';
    // Affiche le lien
    continueLink.classList.add('visible');
  }
}

// Démarrer l'animation
setTimeout(typeWriter, 1000);
</script>

</body>
</html>
