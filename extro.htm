<!DOCTYPE html>
<html lang="fr">
<head>
<meta charset="UTF-8">
<title>Message mystère</title>
<style>
  body {
    font-family: 'Courier New', monospace;
    background-color: #f8f8f8;
    color: #333;
    max-width: 600px;
    margin: 0 auto;
    padding: 40px 20px;
    line-height: 1.6;
    position: relative;
  }
  #typing-text {
    white-space: pre-wrap;
    overflow: hidden;
    border-right: 2px solid #333;
    min-height: 300px;
    position: relative;
    z-index: 1;
  }
  .secret {
    display: inline-block;
    font-weight: normal;
    color: inherit;
    transition: all 2s ease-out;
  }
  .secret.final {
    font-size: 1.5em;
    color: #0000ff;
    font-weight: bold;
    letter-spacing: 3px;
  }
  #continue-link {
    opacity: 0;
    display: inline-block;
    margin-top: 20px;
    padding: 10px 20px;
    background-color: #333;
    color: white;
    text-decoration: none;
    border-radius: 4px;
    transition: opacity 1s ease-in;
    position: relative;
    z-index: 2;
  }
  #continue-link.visible {
    opacity: 1;
  }
  .cursor {
    animation: blink 1s step-end infinite;
  }
  @keyframes blink {
    from, to { opacity: 1; }
    50% { opacity: 0; }
  }
  
  /* Animation feu d'artifice CORRIGÉE */
  .fireworks-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 0;
  }
  .firework {
    position: absolute;
    width: 4px;
    height: 4px;
    border-radius: 50%;
    animation: explode 1.2s ease-out forwards;
    opacity: 0;
  }
  @keyframes explode {
    0% { 
      transform: translate(0, 0) scale(1); 
      opacity: 1;
      box-shadow: 0 0 2px #fff, 0 0 3px #000;
    }
    100% { 
      transform: translate(var(--tx), var(--ty)) scale(0); 
      opacity: 0;
      box-shadow: 0 0 8px #fff, 0 0 10px #000;
    }
  }
</style>
</head>
<body>

<div id="typing-text"></div>
<div id="fireworks-container" class="fireworks-container"></div>

<script>
const textLines = [
  {text: "Madame,", delayAfter: 100},
  {text: "\n\nNous avons franchi une étape importante de notre relation", delayAfter: 100},
  {text: "\nFélicitations!", delayAfter: 100, special: function() {
    // Positionnement sous "Félicitations!"
    const lineHeight = 24; // Hauteur approximative d'une ligne
    const offsetTop = 4 * lineHeight; // 4 lignes au-dessus
    showFireworks(offsetTop);
  }},
  {text: "\nVous n'êtes pas un robot!", delayAfter: 800},
  {text: "\nVoilà", delayAfter: 800},
  {text: "\nJe reviens vers vous", delayAfter: 2000},
  {text: "\nLorsque j'aurais médité", delayAfter: 1000},
  {text: "\nQuoi faire exactement", delayAfter: 1200},
  {text: "\nDe cette certitude", delayAfter: 1200},
  {text: "\n\nHumainement,", delayAfter: 1200},
  {text: "\n\nMoi et nul autre", delayAfter: 1000}
];

const typingElement = document.getElementById('typing-text');
const continueLink = document.getElementById('continue-link');
const fireworksContainer = document.getElementById('fireworks-container');
let lineIndex = 0;
let charIndex = 0;

function showFireworks(offsetTop) {
  // Crée plusieurs particules pour l'effet feu d'artifice
  for (let i = 0; i < 50; i++) {
    const firework = document.createElement('div');
    firework.className = 'firework';
    
    // Position aléatoire autour du centre
    const centerX = 50 + Math.random() * 20 - 10; // 40-60%
    const centerY = offsetTop + 20;
    
    // Direction aléatoire
    const angle = Math.random() * Math.PI * 2;
    const distance = 50 + Math.random() * 70;
    const tx = Math.cos(angle) * distance;
    const ty = Math.sin(angle) * distance;
    
    firework.style.setProperty('--tx', tx + 'px');
    firework.style.setProperty('--ty', ty + 'px');
    firework.style.left = centerX + '%';
    firework.style.top = centerY + 'px';
    firework.style.backgroundColor = i % 2 === 0 ? '#000' : '#fff';
    firework.style.animationDelay = (Math.random() * 0.3) + 's';
    
    fireworksContainer.appendChild(firework);
    
    // Supprime l'élément après l'animation
    setTimeout(() => {
      if (firework.parentNode) {
        firework.parentNode.removeChild(firework);
      }
    }, 1200);
  }
}

function typeWriter() {
  if (lineIndex < textLines.length) {
    const currentLine = textLines[lineIndex];
    
    if (charIndex < currentLine.text.length) {
      typingElement.textContent += currentLine.text[charIndex];
      charIndex++;
      setTimeout(typeWriter, Math.random() * 50 + 30);
    } else {
      // Exécute la fonction spéciale si elle existe
      if (currentLine.special) {
        currentLine.special();
      }
      
      charIndex = 0;
      lineIndex++;
      setTimeout(typeWriter, currentLine.delayAfter);
    }
  } else {
    typingElement.innerHTML += '<span class="cursor">|</span>';
    continueLink.classList.add('visible');
  }
}

setTimeout(typeWriter, 1000);
</script>

</body>
</html>